<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.takari</groupId>
    <artifactId>takari</artifactId>
    <version>18</version>
  </parent>

  <groupId>org.eclipse.scout</groupId>
  <artifactId>eclipse-settings-parent</artifactId>
  <version>3.0.4-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Eclipse Settings Maven Plugin Parent</name>
  <description>Allow the eclipse settings configuration (file encoding, formater ...) from maven configuration.</description>

  <scm>
    <connection>scm:git:https://github.com/BSI-Business-Systems-Integration-AG/eclipse-settings-maven-plugin.git</connection>
    <developerConnection>scm:git:git@github.com:BSI-Business-Systems-Integration-AG/eclipse-settings-maven-plugin.git</developerConnection>
    <tag>3.0</tag>
    <url>https://github.com/BSI-Business-Systems-Integration-AG/eclipse-settings-maven-plugin</url>
  </scm>

  <distributionManagement>
    <repository>
      <id>bintray-bsi-business-systems-integration-ag-scout-eclipse-org</id>
      <url>https://api.bintray.com/maven/${bintray.subject}/${bintray.repo}/${bintray.package}/;publish=1</url>
    </repository>
  </distributionManagement>

  <modules>
    <module>eclipse-settings-maven-plugin</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>

    <!--
      from maven 3.3.1, maven is compiled with Java 7; enforce this

      While maven wrapper offer maven 3.3.3, the JDK7 can be obtained from Azul or Oracle:

        https://www.azul.com/downloads/zulu-community/


    -->
    <java.compliance>1.7</java.compliance>
    <maven.compiler.source>${java.compliance}</maven.compiler.source>
    <maven.compiler.target>${java.compliance}</maven.compiler.target>

    <enforcer.requireMavenVersion>[3.3.3,3.4.0)</enforcer.requireMavenVersion>
    <enforcer.requireJavaVersion>[1.7,1.9)</enforcer.requireJavaVersion>

    <bintray.subject>bsi-business-systems-integration-ag</bintray.subject>
    <bintray.repo>scout-eclipse-org</bintray.repo>
    <bintray.package>eclipse-settings-maven-plugin</bintray.package>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <inherited>true</inherited>
          <configuration>
            <pushChanges>false</pushChanges>
            <tagNameFormat>@{project.version}</tagNameFormat>
          </configuration>
        </plugin>
        <!-- files get signed by bintray -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.3.1</version>
        <executions>
          <execution>
            <id>enforce-build-matrix</id>
            <inherited>true</inherited>
            <goals> <goal>enforce</goal> </goals>
            <configuration>
              <rules>
                <requireMavenVersion> <version>${enforcer.requireMavenVersion}</version>  </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-toolchains-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <id>enforce-build-matrix</id>
            <phase>${toolchain.phase}</phase>
            <goals> <goal>toolchain</goal> </goals>
            <configuration>
              <toolchains> <jdk> <version>${enforcer.requireJavaVersion}</version> </jdk> </toolchains>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!--
      Travis  does  not  support  maven-toolchain-plugin, or rather won't have more than one toolchain: having
      several  JDK defined in .travis.yml will only create one more docker instance rather than using the same
      instance with two JDK installed.

      - travis-usurper will enable the toolchain check by setting its phase to validate.
      - travis-common will disable the toolchain check. It is expected that the child module add the following
        activation for each supported JDK

        JDK8 [oraclejdk8]
        <activation> <property> <name>env.TRAVIS</name> </property> <jdk>1.8</jdk> </activation>

        JDK11 [openjdk11]
        <activation> <property> <name>env.TRAVIS</name> </property> <jdk>11</jdk> </activation>

    -->
    <profile>
      <id>travis-usurper</id>
      <activation> <property> <name>!env.TRAVIS</name> </property> </activation>
      <properties> <toolchain.phase>validate</toolchain.phase> </properties>
    </profile>

    <profile>
      <id>travis-common</id>
      <activation> <property> <name>env.TRAVIS</name> </property> </activation>
      <properties> <toolchain.phase>none</toolchain.phase> </properties>
    </profile>
  </profiles>
</project>
